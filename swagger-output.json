{
  "openapi": "3.0.0",
  "info": {
    "title": "Assignment_5",
    "description": "API documentation",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3456/"
    }
  ],
  "paths": {
    "/customers": {
      "post": {
        "tags": ["Customer"],
        "description": "Endpoint to create a customer",
        "summary": "Create a new customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 30,
                    "description": "The first name of the customer (3-30 characters).",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 30,
                    "description": "The last name of the customer (3-30 characters).",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the customer.",
                    "example": "john.doe@example.com"
                  }
                },
                "required": ["firstName", "lastName", "email"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a customer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The unique identifier of the customer.",
                              "example": 1
                            },
                            "firstName": {
                              "type": "string",
                              "description": "The first name of the customer.",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "description": "The last name of the customer.",
                              "example": "Doe"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email address of the customer.",
                              "example": "john.doe@example.com"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The email provided is already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "The email provided is already registered"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to validation failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "The firstName field is required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Customer"],
        "summary": "Retrieve all customers",
        "description": "Fetch a list of all customers from the database.",
        "operationId": "getAllCustomers",
        "responses": {
          "200": {
            "description": "Successfully retrieved all customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved all customers"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "customers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique identifier of the customer.",
                                "example": 1
                              },
                              "firstName": {
                                "type": "string",
                                "description": "The first name of the customer.",
                                "example": "John"
                              },
                              "lastName": {
                                "type": "string",
                                "description": "The last name of the customer.",
                                "example": "Doe"
                              },
                              "email": {
                                "type": "string",
                                "description": "The email address of the customer.",
                                "example": "john.doe@example.com"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": ["Customer"],
        "summary": "Retrieve a customer by its ID.",
        "description": "Endpoint to get a customer by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the customer.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved customer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The unique identifier of the customer.",
                              "example": 1
                            },
                            "firstName": {
                              "type": "string",
                              "description": "The first name of the customer.",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "description": "The last name of the customer.",
                              "example": "Doe"
                            },
                            "email": {
                              "type": "string",
                              "description": "The email address of the customer.",
                              "example": "john.doe@example.com"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing customer",
        "tags": ["Customer"],
        "description": "Endpoint to update a customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the customer to update"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated customer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "ID of the customer",
                              "example": 1
                            },
                            "firstName": {
                              "type": "string",
                              "example": "Jane"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "email": {
                              "type": "string",
                              "example": "jane.doe@example.com"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error in request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "Updated first name of the customer",
                    "example": "Jane"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Updated last name of the customer",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "Updated email of the customer",
                    "example": "jane.doe@example.com"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Customer"],
        "description": "Endpoint to delete a customer",
        "summary": "Delete a customer by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the customer to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted customer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/addresses": {
      "post": {
        "tags": ["Address"],
        "summary": "Create a new address for a customer",
        "description": "Endpoint to create an address.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the customer to associate with the address"
          }
        ],
        "responses": {
          "201": {
            "description": "Address successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Address successfully created"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "street": {
                              "type": "string",
                              "example": "123 Main St"
                            },
                            "city": { "type": "string", "example": "Anytown" },
                            "state": { "type": "string", "example": "CA" },
                            "zipCode": { "type": "string", "example": "90210" },
                            "customerId": { "type": "integer", "example": 1 },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-11-13T12:34:56Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-11-13T12:34:56Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "123 Main St"
                  },
                  "city": {
                    "type": "string",
                    "example": "Anytown"
                  },
                  "state": {
                    "type": "string",
                    "example": "CA"
                  },
                  "zipCode": {
                    "type": "string",
                    "example": "90210"
                  }
                },
                "required": ["street", "city", "state", "zipCode"]
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Address"],
        "summary": "Retrieve all addresses for a specified customer",
        "description": "Endpoint to get all addresses of a customer",
        "parameters": [
          {
            "in": "path",
            "name": "customer_id",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the customer to retrieve addresses for"
          }
        ],
        "responses": {
          "200": {
            "description": "Addresses retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Addresses retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "street": {
                            "type": "string",
                            "example": "123 Main St"
                          },
                          "city": { "type": "string", "example": "Anytown" },
                          "state": { "type": "string", "example": "CA" },
                          "zipCode": { "type": "string", "example": "90210" },
                          "customerId": { "type": "integer", "example": 1 },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-11-13T12:34:56Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-11-13T12:34:56Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred while retrieving addresses"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addresses/{address_id}": {
      "put": {
        "tags": ["Address"],
        "summary": "Update an existing address for a specified customer",
        "description": "Endpoint to to update an address.",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the address to be updated"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Address updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "street": {
                          "type": "string",
                          "example": "123 Main St"
                        },
                        "city": {
                          "type": "string",
                          "example": "New York"
                        },
                        "state": {
                          "type": "string",
                          "example": "NY"
                        },
                        "zipCode": {
                          "type": "string",
                          "example": "10001"
                        },
                        "customerId": {
                          "type": "string",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Address not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Address not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred while updating the address"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": "string",
                    "example": "123 Main St"
                  },
                  "city": {
                    "type": "string",
                    "example": "New York"
                  },
                  "state": {
                    "type": "string",
                    "example": "NY"
                  },
                  "zipCode": {
                    "type": "string",
                    "example": "10001"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Address"],
        "description": "Endpoint to to delete an address.",
        "summary": "Delete an address by ID",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the address to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the address",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Address deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Address not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Address not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "An error occurred while deleting the address"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/contacts": {
      "post": {
        "tags": ["Contact"],
        "summary": "Create a new contact for a customer",
        "description": "Endpoint to create a contact of a customer.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "ID of the customer for whom the contact is being created"
          }
        ],
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Contact created successfully",
                  "data": {
                    "contact": {
                      "id": 1,
                      "customerId": 1,
                      "phoneNumber": "1234567890"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to validation error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Validation error message"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Internal server error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "example": "+1234567890"
                  }
                },
                "required": ["phoneNumber"]
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Contact"],
        "description": "Endpoint to get all contacts of a customer.",
        "summary": "Retrieve all contacts for a specific customer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "description": "The ID of the customer whose contacts are to be retrieved",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved contacts for the customer",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Contacts retrieved successfully",
                  "data": [
                    {
                      "id": 1,
                      "phone": "123-456-7890",
                      "email": "contact@example.com",
                      "address": "123 Main St"
                    },
                    {
                      "id": 2,
                      "phone": "987-654-3210",
                      "email": "another@example.com",
                      "address": "456 Elm St"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "An error occurred while retrieving contacts"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{contact_id}": {
      "put": {
        "tags": ["Contact"],
        "description": "Endpoint to update a contact of a customer.",
        "summary": "Update a contact's details",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "description": "The ID of the contact to be updated",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the contact",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Contact updated successfully",
                  "data": {
                    "id": 1,
                    "phoneNumber": "9876543210"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to validation error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Phone number is required"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Contact not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "An error occurred while updating the contact"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string",
                    "description": "The phone number of the contact"
                  }
                },
                "example": {
                  "phoneNumber": "9876543210"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Contact"],
        "description": "Endpoint to delete a contact of a customer.",
        "summary": "Delete a contact by ID",
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "description": "The ID of the contact to be deleted",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the contact",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Contact deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Contact not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "An error occurred while deleting the contact"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/orders": {
      "post": {
        "tags": ["Order"],
        "description": "Endpoint to create an order.",
        "summary": "Create a new order for a customer",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "description": "The ID of the customer to create the order for",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order successfully created",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Order created successfully",
                  "data": {
                    "order": {
                      "id": 1,
                      "orderNumber": "ORD123",
                      "totalAmount": 100.0,
                      "status": "pending",
                      "orderDate": "2024-11-10"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request – validation failed",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Total amount is required"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Internal server error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderNumber": {
                    "type": "string",
                    "description": "The order number"
                  },
                  "totalAmount": {
                    "type": "number",
                    "format": "float",
                    "description": "The total amount for the order"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "shipped", "delivered", "canceled"],
                    "default": "pending",
                    "description": "The current status of the order"
                  },
                  "orderDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The date the order was placed"
                  }
                },
                "required": ["orderNumber", "totalAmount"]
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Order"],
        "description": "Endpoint to get all orders of a customer.",
        "summary": "Retrieves all orders for the specified customer.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "description": "The ID of the customer for whom the orders are being retrieved",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders successfully retrieved",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Orders retrieved successfully",
                  "data": [
                    {
                      "id": 1,
                      "orderNumber": "ORD123",
                      "totalAmount": 100.0,
                      "status": "pending",
                      "orderDate": "2024-11-10"
                    },
                    {
                      "id": 2,
                      "orderNumber": "ORD124",
                      "totalAmount": 200.0,
                      "status": "shipped",
                      "orderDate": "2024-11-11"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Customer not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "An error occurred while retrieving orders"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{order_id}": {
      "put": {
        "tags": ["Order"],
        "description": "Endpoint to update an order of a customer.",
        "summary": "Updates the specified order with the provided data.",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "description": "The ID of the order to be updated",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order successfully updated",
            "content": {
              "application/json": {
                "example": {
                  "status": "Success",
                  "message": "Order successfully updated",
                  "data": {
                    "order": {
                      "id": 1,
                      "orderNumber": "ORD123",
                      "totalAmount": 150.0,
                      "status": "shipped",
                      "orderDate": "2024-11-10"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "\"status\" must be one of [pending, shipped, delivered, canceled]"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Order not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "status": "Failure",
                  "message": "Internal error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["pending", "shipped", "delivered", "canceled"]
                  },
                  "totalAmount": {
                    "type": "number",
                    "minimum": 0,
                    "multipleOf": 0.01
                  }
                },
                "example": {
                  "status": "shipped",
                  "totalAmount": 150.0
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Order"],
        "description": "Endpoint to delete an order of a customer.",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
