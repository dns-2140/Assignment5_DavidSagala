{
  "openapi": "3.0.0",
  "info": {
    "title": "Assignment_5",
    "description": "API documentation",
    "version": "1.0.0"
  },
  "host": "localhost:3456",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/api/v1/customers/": {
      "post": {
        "tags": ["Customer"],
        "description": "Endpoint to create a customer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "david"
                },
                "lastName": {
                  "example": "ns"
                },
                "email": {
                  "example": "dns@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created a customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a customer"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "customer": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "firstName": {
                              "type": "string",
                              "example": "John"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "email": {
                              "type": "string",
                              "example": "john.doe@example.com"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "firstName is required"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Resource already exists or state is inconsistent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "The email provided is already registered"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server side",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failure"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Customer"],
        "description": "Endpoint to get all customers",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/customers/{id}": {
      "get": {
        "tags": ["Customer"],
        "description": "Endpoint to get a customer by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["Customer"],
        "description": "Endpoint to update a customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Customer"],
        "description": "Endpoint to delete a customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
